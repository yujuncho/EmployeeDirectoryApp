{"version":3,"sources":["components/EmployeeTable.module.css","components/EmployeeTable.jsx","components/TableSearch.jsx","pages/Employees.jsx","App.jsx","index.js"],"names":["module","exports","EmployeeTable","searchValue","useState","employeeList","setEmployeeList","isAscending","setIsAscending","useEffect","a","fetch","response","json","data","fetchedEmployees","results","fetchEmployees","employeeRows","filter","employee","name","phone","email","trim","length","first","includes","last","matchEmployeeToSearch","sort","b","map","src","picture","thumbnail","alt","login","uuid","className","Table","styles","onClick","prev","colSpan","TableSearch","onSearch","Navbar","bg","variant","Brand","Form","inline","FormControl","onChange","event","target","value","type","placeholder","React","memo","Employees","setSearchValue","searchHandler","useCallback","Container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,0BAA0B,iD,yKCI7B,SAASC,EAAT,GAAyC,IAAhBC,EAAe,EAAfA,YACtC,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,YACY,uCAAG,gCAAAC,EAAA,sEACEC,MACrB,oDAFmB,cACfC,EADe,gBAIFA,EAASC,OAJP,OAIfC,EAJe,OAKfC,EAAmBD,EAAKE,QAC9BV,EAAgBS,GANK,2CAAH,qDAQpBE,KACC,IAEH,IA8BMC,EApBuBb,EAAac,QAAO,SAAAC,GAC/C,OAX4B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACgC,IAA9BpB,EAAYqB,OAAOC,QACnBJ,EAAKK,MAAMC,SAASxB,IACpBkB,EAAKO,KAAKD,SAASxB,IACnBmB,EAAMK,SAASxB,IACfoB,EAAMI,SAASxB,GAKV0B,CAAsBT,MAGiBU,MAAK,SAACpB,EAAGqB,GACvD,OAAIxB,EACEG,EAAEW,KAAKK,MAAQK,EAAEV,KAAKK,MACjB,GAEC,EAGNhB,EAAEW,KAAKK,MAAQK,EAAEV,KAAKK,MACjB,GAEC,KAK0BM,KAAI,SAAAZ,GAC1C,OACE,+BACE,6BACE,qBACEa,IAAKb,EAASc,QAAQC,UACtBC,IAAG,UAAKhB,EAASC,KAAKK,MAAnB,YAA4BN,EAASC,KAAKO,UAGjD,6BAAKR,EAASC,KAAKK,QACnB,6BAAKN,EAASC,KAAKO,OACnB,6BAAKR,EAASE,QACd,6BAAKF,EAASG,UAVPH,EAASiB,MAAMC,SAmB5B,OACE,qBAAKC,UAAU,mEAAf,SACE,eAACC,EAAA,EAAD,WACE,gCACE,+BACE,yCACA,qBACED,UAAWE,IAAO,2BAClBC,QAZQ,WAClBlC,GAAe,SAAAmC,GAAI,OAAKA,MAShB,wBAIcpC,EAAc,SAAM,YAElC,2CACA,uCACA,4CAGJ,kCACGW,EACwB,IAAxBA,EAAaO,QACZ,6BACE,oBAAIc,UAAU,mBAAmBK,QAAQ,IAAzC,0C,4BC1Fd,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACrB,OACE,eAACC,EAAA,EAAD,CAAQR,UAAU,oBAAoBS,GAAG,OAAOC,QAAQ,OAAxD,UACE,cAACF,EAAA,EAAOG,MAAR,iCACA,cAACC,EAAA,EAAD,CAAMZ,UAAU,UAAUa,QAAM,EAAhC,SACE,cAACC,EAAA,EAAD,CACEC,SAAU,SAAAC,GAAK,OAAIT,EAASS,EAAMC,OAAOC,QACzCC,KAAK,OACLC,YAAY,SACZpB,UAAU,sBAOLqB,UAAMC,KAAKhB,GCdX,SAASiB,IACtB,MAAsC1D,mBAAS,IAA/C,mBAAOD,EAAP,KAAoB4D,EAApB,KAEMC,EAAgBC,uBAAY,SAAAR,GAChCM,EAAeN,KACd,IAEH,OACE,eAACS,EAAA,EAAD,CAAW3B,UAAU,OAArB,UACE,iCACE,cAAC,EAAD,CAAaO,SAAUkB,MAEzB,+BACE,cAAC9D,EAAD,CAAeC,YAAaA,S,YCTrBgE,MAJf,WACE,OAAO,cAACL,EAAD,KCDTM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.85ce0610.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-header__clickable\":\"EmployeeTable_table-header__clickable__2hfee\"};","import { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nimport styles from \"./EmployeeTable.module.css\";\n\nexport default function EmployeeTable({ searchValue }) {\n  const [employeeList, setEmployeeList] = useState([]);\n  const [isAscending, setIsAscending] = useState(true);\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      const response = await fetch(\n        \"https://randomuser.me/api?results=50&gender=male\"\n      );\n      const data = await response.json();\n      const fetchedEmployees = data.results;\n      setEmployeeList(fetchedEmployees);\n    };\n    fetchEmployees();\n  }, []);\n\n  const matchEmployeeToSearch = ({ name, phone, email }) => {\n    return (\n      searchValue.trim().length === 0 ||\n      name.first.includes(searchValue) ||\n      name.last.includes(searchValue) ||\n      phone.includes(searchValue) ||\n      email.includes(searchValue)\n    );\n  };\n\n  const employeeListFiltered = employeeList.filter(employee => {\n    return matchEmployeeToSearch(employee);\n  });\n\n  const employeeListSorted = employeeListFiltered.sort((a, b) => {\n    if (isAscending) {\n      if (a.name.first > b.name.first) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else {\n      if (a.name.first < b.name.first) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  });\n\n  const employeeRows = employeeListSorted.map(employee => {\n    return (\n      <tr key={employee.login.uuid}>\n        <td>\n          <img\n            src={employee.picture.thumbnail}\n            alt={`${employee.name.first} ${employee.name.last}`}\n          />\n        </td>\n        <td>{employee.name.first}</td>\n        <td>{employee.name.last}</td>\n        <td>{employee.phone}</td>\n        <td>{employee.email}</td>\n      </tr>\n    );\n  });\n\n  const sortHandler = () => {\n    setIsAscending(prev => !prev);\n  };\n\n  return (\n    <div className=\"table-responsive bg-light border-left border-right border-bottom\">\n      <Table>\n        <thead>\n          <tr>\n            <th>Picture</th>\n            <th\n              className={styles[\"table-header__clickable\"]}\n              onClick={sortHandler}\n            >\n              First name {isAscending ? \"↑\" : \"↓\"}\n            </th>\n            <th>Last name</th>\n            <th>Phone</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          {employeeRows}\n          {employeeRows.length === 0 && (\n            <tr>\n              <th className=\"text-center py-5\" colSpan=\"5\">\n                No employees found\n              </th>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, FormControl, Navbar } from \"react-bootstrap\";\n\nfunction TableSearch({ onSearch }) {\n  return (\n    <Navbar className=\"d-block d-sm-flex\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Employee Directory</Navbar.Brand>\n      <Form className=\"ml-auto\" inline>\n        <FormControl\n          onChange={event => onSearch(event.target.value)}\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"my-2 my-sm-0\"\n        />\n      </Form>\n    </Navbar>\n  );\n}\n\nexport default React.memo(TableSearch);\n","import { useState, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EmployeeTable from \"../components/EmployeeTable\";\nimport TableSearch from \"../components/TableSearch\";\n\nexport default function Employees() {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const searchHandler = useCallback(value => {\n    setSearchValue(value);\n  }, []);\n\n  return (\n    <Container className=\"py-5\">\n      <header>\n        <TableSearch onSearch={searchHandler} />\n      </header>\n      <main>\n        <EmployeeTable searchValue={searchValue} />\n      </main>\n    </Container>\n  );\n}\n","import Employees from \"./pages/Employees\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return <Employees />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}